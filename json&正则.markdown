## Json 语法
- 并列数据用逗号（，）分割
- 映射用冒号（:)
- 并列数据集合（数组）用 [] 表示
- 映射的集合（对象）用{} 表示。

## 正则表达式
$pattern  正则表达式
$subject 匹配的目标数据 数组或字符串

## 正则函数
1.  preg_match（）  和 preg_match_all()  返回值为匹配的次数
-  preg_match($pattern ，$subject，array &$matches )  只匹配一次，匹配结果放入第三个参数数组中
所以此函数饿的第三个数组的key只能是0或1 

- preg_match_all() 多次匹配，匹配结果放入第三个参数数组中

2. preg_replace( )  和 preg_filter() 执行一个正则表达式搜索和替换 
- preg_replace( ) 会返回匹配结果，不匹配的也会保留
而preg_filter()只返回匹配的结果

3. preg_grep ( string $pattern , array $input）
- 返回匹配模式的数组条目 ，只匹配不替换，只保留匹配的结果

4. preg_split （）
通过一个正则表达式分隔给定字符串. 返回分割结果数组

5. preg_quote （） 转意需要匹配的字符串中的特殊字符
向其中 每个正则表达式语法中的字符前增加一个反斜线

#元字符
1. 定义原子的筛选方式
- | -> 或运算，匹配|符号左右两边的任意一个
- [] -> 匹配出现在[]中的任意一个原子
- [^ ] ->首先这里^必须和[紧挨着，才表示匹配除了[]里面任意原子的字符 （如[^789]除了789之外）
- [ ^ ]->如果不挨着，就只表示匹配^这种字符了，（如[78^9]匹配 7，8，9 ,^，任一一个出现，就匹配出来）

2. 定义原子的集合，将类似的原子进行归类来进行缩写简化

- . 匹配除换行符之外的任意字符 即[^\n]
- \d 匹配任意一个十进制数字 即[0-9]
- \D 匹配任意一个 非 十进制数字 即[^0-9]
- \s 匹配一个 不 可见原子 即[\f\n\r\t\v]
- \S 匹配一个可见原子 即[^\f\n\r\t\v]
- \w 匹配任意一个数字、字母、或者下划线 即[0-9a-zA-Z]
- \W 匹配任意一个 非 数字、字母、或者下划线 即[^0-9a-zA-Z]

## 正则语法
1. 界定符
表示一个正则表达式的开始和结束,(两个/) 如 /[0-9]/ 
2. 原子
- 可见原子 
键盘输入可见，常见的字符
- 不可见原子
键盘输入不可见 如换行 ，tab ,空格
3. 量词
- {n}: 表示其前面的原子恰好出现了n次 例如连续出现三个数字 \d{3}
- {n,}: 表示其前面的原子最少出现了n次
- {n,m}: 表示其前面的原子最少出现n次，最多出现了m次
- *：   表示匹配0次、1次或者多次其之前的原子，即{0,}
- +:    表示匹配1次或者多次其之前的原子，即{1,}
- ?:    匹配0次，或者1次其之前的原子，即{0,1}  如 _?i 就是匹配全文的“_i”和“i”
4. 边界控制
- ^ 开始 前面不能有任何字符 空格也不行 如^D 只匹配以D开头的，连续的DD也不行，只会匹配第一个D
- $ 结束 后面不能有任何字符 空格也不行   如D$ 只匹配以D结尾的
5. 模式单元
（）  会将括号里面的正则表达式当作一个原子来看待 
例如 [Dd]ung~ Dung~|dung~ (D|d)ung~ 三个效果一样。

## 模式修正(也可以共用)
- 贪婪匹配（默认）：匹配结果存在歧义时取其长，默认匹配模式，添加在匹配模式的最后面，实例/0-9/
- U 懒惰匹配，匹配结果存在歧义时取其短，实例/0-9/U
- i 忽略英文字母大小写，如:"/abc/i"可以与abc或aBC或ABc等匹配
- x 忽略正则表达式中的空白，(空格和tab制表符)
- g 全局匹配
- m 将字符串视为多行
- s 让元字符"."匹配包括换行在内的所有字符
```
模式为:$mode="/pr.y/";
要匹配字符串为:$str="pr\ny";
两者不可匹配; . 是除了换行以外的字符可匹配;

修改下模式为:$mode="/pr.y/s";
其中修正符s将\n视为普通字符,即不是换行;
最后两者可以匹配;
```

- A 强制从目标字符串开头匹配
```
$mode="/abc/A";
可以与$str="abcsdfi"匹配,
不可以与$str2="sdsdabc"匹配;
因为$str2不是以abc开头;
```

- D 如果使用$限制结尾字符,则不允许结尾有换行;

```
模式为:$mode="/abc$/";
    可以与最后有换行的$str="adshabc\n"匹配;
元子符$会忽略最后的换行\n;
如果模式为:$mode="/abc/D",
则不能与$str="adshabc\n"匹配,
修正符D限制其不可有换行;必需以abc结尾;
```

